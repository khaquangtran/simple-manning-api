// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentType {
  PAYPAL
  STRIPE
}

enum PaymentStatus {
  PENDING
  PAID
}

model Customer {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  email     String     @unique
  password  String
  salt      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  CartItem  CartItem[]
}

model Book {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  author      String
  price       Decimal     @db.Money
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  OrderItem   OrderItem[]
  CartItem    CartItem[]
}

model Order {
  id            Int           @id @default(autoincrement())
  totalPrice    Decimal       @db.Money
  paymentType   PaymentType
  paymentStatus PaymentStatus
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now()) @updatedAt
  OrderItem     OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  bookId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model CartItem {
  id           Int      @id @default(autoincrement())
  customerId   Int
  customer     Customer @relation(fields: [customerId], references: [id])
  bookId       Int
  book         Book     @relation(fields: [bookId], references: [id])
  quantity     Int
  isCheckedOut Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}
